// Code generated by go-swagger; DO NOT EDIT.

package notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/puppetlabs/nebula-cli/pkg/client/api/models"
)

// PostNotificationReadReader is a Reader for the PostNotificationRead structure.
type PostNotificationReadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostNotificationReadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostNotificationReadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPostNotificationReadDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostNotificationReadOK creates a PostNotificationReadOK with default headers values
func NewPostNotificationReadOK() *PostNotificationReadOK {
	return &PostNotificationReadOK{}
}

/*PostNotificationReadOK handles this case with default header values.

The operation completed successfully
*/
type PostNotificationReadOK struct {
	Payload *PostNotificationReadOKBody
}

func (o *PostNotificationReadOK) Error() string {
	return fmt.Sprintf("[POST /api/notifications/read/{notificationId}][%d] postNotificationReadOK  %+v", 200, o.Payload)
}

func (o *PostNotificationReadOK) GetPayload() *PostNotificationReadOKBody {
	return o.Payload
}

func (o *PostNotificationReadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostNotificationReadOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNotificationReadDefault creates a PostNotificationReadDefault with default headers values
func NewPostNotificationReadDefault(code int) *PostNotificationReadDefault {
	return &PostNotificationReadDefault{
		_statusCode: code,
	}
}

/*PostNotificationReadDefault handles this case with default header values.

An error occurred
*/
type PostNotificationReadDefault struct {
	_statusCode int

	Payload *PostNotificationReadDefaultBody
}

// Code gets the status code for the post notification read default response
func (o *PostNotificationReadDefault) Code() int {
	return o._statusCode
}

func (o *PostNotificationReadDefault) Error() string {
	return fmt.Sprintf("[POST /api/notifications/read/{notificationId}][%d] postNotificationRead default  %+v", o._statusCode, o.Payload)
}

func (o *PostNotificationReadDefault) GetPayload() *PostNotificationReadDefaultBody {
	return o.Payload
}

func (o *PostNotificationReadDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostNotificationReadDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostNotificationReadDefaultBody Error response
swagger:model PostNotificationReadDefaultBody
*/
type PostNotificationReadDefaultBody struct {

	// error
	Error *models.Error `json:"error,omitempty"`
}

// Validate validates this post notification read default body
func (o *PostNotificationReadDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostNotificationReadDefaultBody) validateError(formats strfmt.Registry) error {

	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postNotificationRead default" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostNotificationReadDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostNotificationReadDefaultBody) UnmarshalBinary(b []byte) error {
	var res PostNotificationReadDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostNotificationReadOKBody Success response
swagger:model PostNotificationReadOKBody
*/
type PostNotificationReadOKBody struct {

	// Did this succeed?
	Success bool `json:"success,omitempty"`
}

// Validate validates this post notification read o k body
func (o *PostNotificationReadOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostNotificationReadOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostNotificationReadOKBody) UnmarshalBinary(b []byte) error {
	var res PostNotificationReadOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
