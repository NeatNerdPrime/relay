// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/puppetlabs/nebula-cli/pkg/client/api/models"
)

// ForgotPasswordReader is a Reader for the ForgotPassword structure.
type ForgotPasswordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ForgotPasswordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewForgotPasswordAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewForgotPasswordDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewForgotPasswordAccepted creates a ForgotPasswordAccepted with default headers values
func NewForgotPasswordAccepted() *ForgotPasswordAccepted {
	return &ForgotPasswordAccepted{}
}

/*ForgotPasswordAccepted handles this case with default header values.

The operation completed successfully
*/
type ForgotPasswordAccepted struct {
	Payload *ForgotPasswordAcceptedBody
}

func (o *ForgotPasswordAccepted) Error() string {
	return fmt.Sprintf("[POST /forgot-password][%d] forgotPasswordAccepted  %+v", 202, o.Payload)
}

func (o *ForgotPasswordAccepted) GetPayload() *ForgotPasswordAcceptedBody {
	return o.Payload
}

func (o *ForgotPasswordAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ForgotPasswordAcceptedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewForgotPasswordDefault creates a ForgotPasswordDefault with default headers values
func NewForgotPasswordDefault(code int) *ForgotPasswordDefault {
	return &ForgotPasswordDefault{
		_statusCode: code,
	}
}

/*ForgotPasswordDefault handles this case with default header values.

An error occurred
*/
type ForgotPasswordDefault struct {
	_statusCode int

	Payload *ForgotPasswordDefaultBody
}

// Code gets the status code for the forgot password default response
func (o *ForgotPasswordDefault) Code() int {
	return o._statusCode
}

func (o *ForgotPasswordDefault) Error() string {
	return fmt.Sprintf("[POST /forgot-password][%d] forgotPassword default  %+v", o._statusCode, o.Payload)
}

func (o *ForgotPasswordDefault) GetPayload() *ForgotPasswordDefaultBody {
	return o.Payload
}

func (o *ForgotPasswordDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ForgotPasswordDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ForgotPasswordAcceptedBody Success response
swagger:model ForgotPasswordAcceptedBody
*/
type ForgotPasswordAcceptedBody struct {

	// Did this succeed?
	Success bool `json:"success,omitempty"`
}

// Validate validates this forgot password accepted body
func (o *ForgotPasswordAcceptedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ForgotPasswordAcceptedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ForgotPasswordAcceptedBody) UnmarshalBinary(b []byte) error {
	var res ForgotPasswordAcceptedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ForgotPasswordBody A request to reset a user's password
swagger:model ForgotPasswordBody
*/
type ForgotPasswordBody struct {

	// User email
	// Required: true
	Email *string `json:"email"`
}

// Validate validates this forgot password body
func (o *ForgotPasswordBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ForgotPasswordBody) validateEmail(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"email", "body", o.Email); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ForgotPasswordBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ForgotPasswordBody) UnmarshalBinary(b []byte) error {
	var res ForgotPasswordBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ForgotPasswordDefaultBody Error response
swagger:model ForgotPasswordDefaultBody
*/
type ForgotPasswordDefaultBody struct {

	// error
	Error *models.Error `json:"error,omitempty"`
}

// Validate validates this forgot password default body
func (o *ForgotPasswordDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ForgotPasswordDefaultBody) validateError(formats strfmt.Registry) error {

	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("forgotPassword default" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ForgotPasswordDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ForgotPasswordDefaultBody) UnmarshalBinary(b []byte) error {
	var res ForgotPasswordDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
