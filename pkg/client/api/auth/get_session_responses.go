// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/puppetlabs/relay/pkg/client/api/models"
)

// GetSessionReader is a Reader for the GetSession structure.
type GetSessionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSessionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSessionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetSessionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSessionOK creates a GetSessionOK with default headers values
func NewGetSessionOK() *GetSessionOK {
	return &GetSessionOK{}
}

/*GetSessionOK handles this case with default header values.

The operation completed successfully
*/
type GetSessionOK struct {
	Payload *GetSessionOKBody
}

func (o *GetSessionOK) Error() string {
	return fmt.Sprintf("[GET /auth/sessions][%d] getSessionOK  %+v", 200, o.Payload)
}

func (o *GetSessionOK) GetPayload() *GetSessionOKBody {
	return o.Payload
}

func (o *GetSessionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetSessionOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSessionDefault creates a GetSessionDefault with default headers values
func NewGetSessionDefault(code int) *GetSessionDefault {
	return &GetSessionDefault{
		_statusCode: code,
	}
}

/*GetSessionDefault handles this case with default header values.

An error occurred
*/
type GetSessionDefault struct {
	_statusCode int

	Payload *GetSessionDefaultBody
}

// Code gets the status code for the get session default response
func (o *GetSessionDefault) Code() int {
	return o._statusCode
}

func (o *GetSessionDefault) Error() string {
	return fmt.Sprintf("[GET /auth/sessions][%d] getSession default  %+v", o._statusCode, o.Payload)
}

func (o *GetSessionDefault) GetPayload() *GetSessionDefaultBody {
	return o.Payload
}

func (o *GetSessionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetSessionDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetSessionDefaultBody Error response
swagger:model GetSessionDefaultBody
*/
type GetSessionDefaultBody struct {

	// error
	Error *models.Error `json:"error,omitempty"`
}

// Validate validates this get session default body
func (o *GetSessionDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetSessionDefaultBody) validateError(formats strfmt.Registry) error {

	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getSession default" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetSessionDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetSessionDefaultBody) UnmarshalBinary(b []byte) error {
	var res GetSessionDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetSessionOKBody Success response
swagger:model GetSessionOKBody
*/
type GetSessionOKBody struct {

	// Did this succeed?
	Success bool `json:"success,omitempty"`
}

// Validate validates this get session o k body
func (o *GetSessionOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetSessionOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetSessionOKBody) UnmarshalBinary(b []byte) error {
	var res GetSessionOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
