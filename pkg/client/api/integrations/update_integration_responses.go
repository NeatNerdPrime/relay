// Code generated by go-swagger; DO NOT EDIT.

package integrations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/puppetlabs/nebula-cli/pkg/client/api/models"
)

// UpdateIntegrationReader is a Reader for the UpdateIntegration structure.
type UpdateIntegrationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateIntegrationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateIntegrationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUpdateIntegrationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateIntegrationOK creates a UpdateIntegrationOK with default headers values
func NewUpdateIntegrationOK() *UpdateIntegrationOK {
	return &UpdateIntegrationOK{}
}

/*UpdateIntegrationOK handles this case with default header values.

Updated integration
*/
type UpdateIntegrationOK struct {
	Payload *UpdateIntegrationOKBody
}

func (o *UpdateIntegrationOK) Error() string {
	return fmt.Sprintf("[PUT /api/integrations/{integrationId}][%d] updateIntegrationOK  %+v", 200, o.Payload)
}

func (o *UpdateIntegrationOK) GetPayload() *UpdateIntegrationOKBody {
	return o.Payload
}

func (o *UpdateIntegrationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UpdateIntegrationOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateIntegrationDefault creates a UpdateIntegrationDefault with default headers values
func NewUpdateIntegrationDefault(code int) *UpdateIntegrationDefault {
	return &UpdateIntegrationDefault{
		_statusCode: code,
	}
}

/*UpdateIntegrationDefault handles this case with default header values.

An error occurred
*/
type UpdateIntegrationDefault struct {
	_statusCode int

	Payload *UpdateIntegrationDefaultBody
}

// Code gets the status code for the update integration default response
func (o *UpdateIntegrationDefault) Code() int {
	return o._statusCode
}

func (o *UpdateIntegrationDefault) Error() string {
	return fmt.Sprintf("[PUT /api/integrations/{integrationId}][%d] updateIntegration default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateIntegrationDefault) GetPayload() *UpdateIntegrationDefaultBody {
	return o.Payload
}

func (o *UpdateIntegrationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UpdateIntegrationDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*UpdateIntegrationBody The editable fields of an external integration
swagger:model UpdateIntegrationBody
*/
type UpdateIntegrationBody struct {

	// A descriptive integration name
	Name string `json:"name,omitempty"`
}

// Validate validates this update integration body
func (o *UpdateIntegrationBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateIntegrationBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateIntegrationBody) UnmarshalBinary(b []byte) error {
	var res UpdateIntegrationBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*UpdateIntegrationDefaultBody Error response
swagger:model UpdateIntegrationDefaultBody
*/
type UpdateIntegrationDefaultBody struct {

	// error
	Error *models.Error `json:"error,omitempty"`
}

// Validate validates this update integration default body
func (o *UpdateIntegrationDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateIntegrationDefaultBody) validateError(formats strfmt.Registry) error {

	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("updateIntegration default" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UpdateIntegrationDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateIntegrationDefaultBody) UnmarshalBinary(b []byte) error {
	var res UpdateIntegrationDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*UpdateIntegrationOKBody update integration o k body
swagger:model UpdateIntegrationOKBody
*/
type UpdateIntegrationOKBody struct {
	models.IntegrationEntity

	// integration
	Integration *models.Integration `json:"integration,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *UpdateIntegrationOKBody) UnmarshalJSON(raw []byte) error {
	// UpdateIntegrationOKBodyAO0
	var updateIntegrationOKBodyAO0 models.IntegrationEntity
	if err := swag.ReadJSON(raw, &updateIntegrationOKBodyAO0); err != nil {
		return err
	}
	o.IntegrationEntity = updateIntegrationOKBodyAO0

	// UpdateIntegrationOKBodyAO1
	var dataUpdateIntegrationOKBodyAO1 struct {
		Integration *models.Integration `json:"integration,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataUpdateIntegrationOKBodyAO1); err != nil {
		return err
	}

	o.Integration = dataUpdateIntegrationOKBodyAO1.Integration

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o UpdateIntegrationOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	updateIntegrationOKBodyAO0, err := swag.WriteJSON(o.IntegrationEntity)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, updateIntegrationOKBodyAO0)

	var dataUpdateIntegrationOKBodyAO1 struct {
		Integration *models.Integration `json:"integration,omitempty"`
	}

	dataUpdateIntegrationOKBodyAO1.Integration = o.Integration

	jsonDataUpdateIntegrationOKBodyAO1, errUpdateIntegrationOKBodyAO1 := swag.WriteJSON(dataUpdateIntegrationOKBodyAO1)
	if errUpdateIntegrationOKBodyAO1 != nil {
		return nil, errUpdateIntegrationOKBodyAO1
	}
	_parts = append(_parts, jsonDataUpdateIntegrationOKBodyAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this update integration o k body
func (o *UpdateIntegrationOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.IntegrationEntity
	if err := o.IntegrationEntity.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIntegration(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateIntegrationOKBody) validateIntegration(formats strfmt.Registry) error {

	if swag.IsZero(o.Integration) { // not required
		return nil
	}

	if o.Integration != nil {
		if err := o.Integration.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("updateIntegrationOK" + "." + "integration")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UpdateIntegrationOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateIntegrationOKBody) UnmarshalBinary(b []byte) error {
	var res UpdateIntegrationOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
