// Code generated by go-swagger; DO NOT EDIT.

package access_control

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/puppetlabs/relay/pkg/client/api/models"
)

// AttachUserRoleReader is a Reader for the AttachUserRole structure.
type AttachUserRoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AttachUserRoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAttachUserRoleCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAttachUserRoleDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAttachUserRoleCreated creates a AttachUserRoleCreated with default headers values
func NewAttachUserRoleCreated() *AttachUserRoleCreated {
	return &AttachUserRoleCreated{}
}

/*AttachUserRoleCreated handles this case with default header values.

The role was succesfully attached
*/
type AttachUserRoleCreated struct {
	Payload *AttachUserRoleCreatedBody
}

func (o *AttachUserRoleCreated) Error() string {
	return fmt.Sprintf("[PUT /api/users/{userId}/roles/{roleId}][%d] attachUserRoleCreated  %+v", 201, o.Payload)
}

func (o *AttachUserRoleCreated) GetPayload() *AttachUserRoleCreatedBody {
	return o.Payload
}

func (o *AttachUserRoleCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AttachUserRoleCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAttachUserRoleDefault creates a AttachUserRoleDefault with default headers values
func NewAttachUserRoleDefault(code int) *AttachUserRoleDefault {
	return &AttachUserRoleDefault{
		_statusCode: code,
	}
}

/*AttachUserRoleDefault handles this case with default header values.

An error occurred
*/
type AttachUserRoleDefault struct {
	_statusCode int

	Payload *AttachUserRoleDefaultBody
}

// Code gets the status code for the attach user role default response
func (o *AttachUserRoleDefault) Code() int {
	return o._statusCode
}

func (o *AttachUserRoleDefault) Error() string {
	return fmt.Sprintf("[PUT /api/users/{userId}/roles/{roleId}][%d] attachUserRole default  %+v", o._statusCode, o.Payload)
}

func (o *AttachUserRoleDefault) GetPayload() *AttachUserRoleDefaultBody {
	return o.Payload
}

func (o *AttachUserRoleDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AttachUserRoleDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*AttachUserRoleCreatedBody attach user role created body
swagger:model AttachUserRoleCreatedBody
*/
type AttachUserRoleCreatedBody struct {
	models.UserEntity

	// role
	Role *models.RoleSummary `json:"role,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *AttachUserRoleCreatedBody) UnmarshalJSON(raw []byte) error {
	// AttachUserRoleCreatedBodyAO0
	var attachUserRoleCreatedBodyAO0 models.UserEntity
	if err := swag.ReadJSON(raw, &attachUserRoleCreatedBodyAO0); err != nil {
		return err
	}
	o.UserEntity = attachUserRoleCreatedBodyAO0

	// AttachUserRoleCreatedBodyAO1
	var dataAttachUserRoleCreatedBodyAO1 struct {
		Role *models.RoleSummary `json:"role,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAttachUserRoleCreatedBodyAO1); err != nil {
		return err
	}

	o.Role = dataAttachUserRoleCreatedBodyAO1.Role

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o AttachUserRoleCreatedBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	attachUserRoleCreatedBodyAO0, err := swag.WriteJSON(o.UserEntity)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, attachUserRoleCreatedBodyAO0)
	var dataAttachUserRoleCreatedBodyAO1 struct {
		Role *models.RoleSummary `json:"role,omitempty"`
	}

	dataAttachUserRoleCreatedBodyAO1.Role = o.Role

	jsonDataAttachUserRoleCreatedBodyAO1, errAttachUserRoleCreatedBodyAO1 := swag.WriteJSON(dataAttachUserRoleCreatedBodyAO1)
	if errAttachUserRoleCreatedBodyAO1 != nil {
		return nil, errAttachUserRoleCreatedBodyAO1
	}
	_parts = append(_parts, jsonDataAttachUserRoleCreatedBodyAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this attach user role created body
func (o *AttachUserRoleCreatedBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.UserEntity
	if err := o.UserEntity.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRole(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AttachUserRoleCreatedBody) validateRole(formats strfmt.Registry) error {

	if swag.IsZero(o.Role) { // not required
		return nil
	}

	if o.Role != nil {
		if err := o.Role.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("attachUserRoleCreated" + "." + "role")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AttachUserRoleCreatedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AttachUserRoleCreatedBody) UnmarshalBinary(b []byte) error {
	var res AttachUserRoleCreatedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AttachUserRoleDefaultBody Error response
swagger:model AttachUserRoleDefaultBody
*/
type AttachUserRoleDefaultBody struct {

	// error
	Error *models.Error `json:"error,omitempty"`
}

// Validate validates this attach user role default body
func (o *AttachUserRoleDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AttachUserRoleDefaultBody) validateError(formats strfmt.Registry) error {

	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("attachUserRole default" + "." + "error")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AttachUserRoleDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AttachUserRoleDefaultBody) UnmarshalBinary(b []byte) error {
	var res AttachUserRoleDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
