// Code generated by go-swagger; DO NOT EDIT.

package auth_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/puppetlabs/nebula/pkg/client/api/models"
)

// UpdateProfileReader is a Reader for the UpdateProfile structure.
type UpdateProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewUpdateProfileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateProfileOK creates a UpdateProfileOK with default headers values
func NewUpdateProfileOK() *UpdateProfileOK {
	return &UpdateProfileOK{}
}

/*UpdateProfileOK handles this case with default header values.

The updated user profile.
*/
type UpdateProfileOK struct {
	Payload *models.User
}

func (o *UpdateProfileOK) Error() string {
	return fmt.Sprintf("[PUT /auth/profile][%d] updateProfileOK  %+v", 200, o.Payload)
}

func (o *UpdateProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateProfileUnauthorized creates a UpdateProfileUnauthorized with default headers values
func NewUpdateProfileUnauthorized() *UpdateProfileUnauthorized {
	return &UpdateProfileUnauthorized{}
}

/*UpdateProfileUnauthorized handles this case with default header values.

The user isn't currently authenticated.
*/
type UpdateProfileUnauthorized struct {
}

func (o *UpdateProfileUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /auth/profile][%d] updateProfileUnauthorized ", 401)
}

func (o *UpdateProfileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
