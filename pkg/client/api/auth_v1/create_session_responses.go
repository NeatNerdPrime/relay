// Code generated by go-swagger; DO NOT EDIT.

package auth_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// CreateSessionReader is a Reader for the CreateSession structure.
type CreateSessionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSessionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateSessionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewCreateSessionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateSessionOK creates a CreateSessionOK with default headers values
func NewCreateSessionOK() *CreateSessionOK {
	return &CreateSessionOK{}
}

/*CreateSessionOK handles this case with default header values.

Newly issued JWT token
*/
type CreateSessionOK struct {
	/*The authorization bearer token
	 */
	Authorization string
}

func (o *CreateSessionOK) Error() string {
	return fmt.Sprintf("[POST /auth/sessions][%d] createSessionOK ", 200)
}

func (o *CreateSessionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Authorization
	o.Authorization = response.GetHeader("Authorization")

	return nil
}

// NewCreateSessionUnauthorized creates a CreateSessionUnauthorized with default headers values
func NewCreateSessionUnauthorized() *CreateSessionUnauthorized {
	return &CreateSessionUnauthorized{}
}

/*CreateSessionUnauthorized handles this case with default header values.

Invalid credentials provided
*/
type CreateSessionUnauthorized struct {
}

func (o *CreateSessionUnauthorized) Error() string {
	return fmt.Sprintf("[POST /auth/sessions][%d] createSessionUnauthorized ", 401)
}

func (o *CreateSessionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
