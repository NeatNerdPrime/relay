// Code generated by go-swagger; DO NOT EDIT.

package workflow_secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListWorkflowSecretsParams creates a new ListWorkflowSecretsParams object
// with the default values initialized.
func NewListWorkflowSecretsParams() *ListWorkflowSecretsParams {
	var ()
	return &ListWorkflowSecretsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListWorkflowSecretsParamsWithTimeout creates a new ListWorkflowSecretsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListWorkflowSecretsParamsWithTimeout(timeout time.Duration) *ListWorkflowSecretsParams {
	var ()
	return &ListWorkflowSecretsParams{

		timeout: timeout,
	}
}

// NewListWorkflowSecretsParamsWithContext creates a new ListWorkflowSecretsParams object
// with the default values initialized, and the ability to set a context for a request
func NewListWorkflowSecretsParamsWithContext(ctx context.Context) *ListWorkflowSecretsParams {
	var ()
	return &ListWorkflowSecretsParams{

		Context: ctx,
	}
}

// NewListWorkflowSecretsParamsWithHTTPClient creates a new ListWorkflowSecretsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListWorkflowSecretsParamsWithHTTPClient(client *http.Client) *ListWorkflowSecretsParams {
	var ()
	return &ListWorkflowSecretsParams{
		HTTPClient: client,
	}
}

/*ListWorkflowSecretsParams contains all the parameters to send to the API endpoint
for the list workflow secrets operation typically these are written to a http.Request
*/
type ListWorkflowSecretsParams struct {

	/*WorkflowName
	  Workflow name

	*/
	WorkflowName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list workflow secrets params
func (o *ListWorkflowSecretsParams) WithTimeout(timeout time.Duration) *ListWorkflowSecretsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list workflow secrets params
func (o *ListWorkflowSecretsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list workflow secrets params
func (o *ListWorkflowSecretsParams) WithContext(ctx context.Context) *ListWorkflowSecretsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list workflow secrets params
func (o *ListWorkflowSecretsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list workflow secrets params
func (o *ListWorkflowSecretsParams) WithHTTPClient(client *http.Client) *ListWorkflowSecretsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list workflow secrets params
func (o *ListWorkflowSecretsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithWorkflowName adds the workflowName to the list workflow secrets params
func (o *ListWorkflowSecretsParams) WithWorkflowName(workflowName string) *ListWorkflowSecretsParams {
	o.SetWorkflowName(workflowName)
	return o
}

// SetWorkflowName adds the workflowName to the list workflow secrets params
func (o *ListWorkflowSecretsParams) SetWorkflowName(workflowName string) {
	o.WorkflowName = workflowName
}

// WriteToRequest writes these params to a swagger request
func (o *ListWorkflowSecretsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param workflowName
	if err := r.SetPathParam("workflowName", o.WorkflowName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
