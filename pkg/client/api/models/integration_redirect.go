// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IntegrationRedirect Response containing an integration ID and an oauth redirect
// swagger:model IntegrationRedirect
type IntegrationRedirect struct {

	// Integration id
	// Required: true
	IntegrationID *string `json:"integration_id"`

	// A redirect url at which the integration can be authenticated
	// Required: true
	Redirect *string `json:"redirect"`
}

// Validate validates this integration redirect
func (m *IntegrationRedirect) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIntegrationID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRedirect(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IntegrationRedirect) validateIntegrationID(formats strfmt.Registry) error {

	if err := validate.Required("integration_id", "body", m.IntegrationID); err != nil {
		return err
	}

	return nil
}

func (m *IntegrationRedirect) validateRedirect(formats strfmt.Registry) error {

	if err := validate.Required("redirect", "body", m.Redirect); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IntegrationRedirect) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IntegrationRedirect) UnmarshalBinary(b []byte) error {
	var res IntegrationRedirect
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
