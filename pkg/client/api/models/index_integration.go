// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IndexIntegration index integration
// swagger:model IndexIntegration
type IndexIntegration struct {

	// created at
	CreatedAt string `json:"created_at,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// provider
	// Enum: [github]
	Provider string `json:"provider,omitempty"`

	// updated at
	UpdatedAt string `json:"updated_at,omitempty"`

	// user id
	UserID string `json:"user_id,omitempty"`
}

// Validate validates this index integration
func (m *IndexIntegration) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProvider(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var indexIntegrationTypeProviderPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["github"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		indexIntegrationTypeProviderPropEnum = append(indexIntegrationTypeProviderPropEnum, v)
	}
}

const (

	// IndexIntegrationProviderGithub captures enum value "github"
	IndexIntegrationProviderGithub string = "github"
)

// prop value enum
func (m *IndexIntegration) validateProviderEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, indexIntegrationTypeProviderPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *IndexIntegration) validateProvider(formats strfmt.Registry) error {

	if swag.IsZero(m.Provider) { // not required
		return nil
	}

	// value enum
	if err := m.validateProviderEnum("provider", "body", m.Provider); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IndexIntegration) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IndexIntegration) UnmarshalBinary(b []byte) error {
	var res IndexIntegration
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
