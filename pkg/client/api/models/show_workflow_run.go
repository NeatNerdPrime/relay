// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ShowWorkflowRun show workflow run
// swagger:model ShowWorkflowRun
type ShowWorkflowRun struct {

	// created at
	CreatedAt string `json:"created_at,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// status
	// Enum: [success failure in-progress pending]
	Status string `json:"status,omitempty"`

	// updated at
	UpdatedAt string `json:"updated_at,omitempty"`

	// user id
	UserID string `json:"user_id,omitempty"`

	// workflow id
	WorkflowID string `json:"workflow_id,omitempty"`

	// workflow text
	WorkflowText string `json:"workflow_text,omitempty"`
}

// Validate validates this show workflow run
func (m *ShowWorkflowRun) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var showWorkflowRunTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["success","failure","in-progress","pending"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		showWorkflowRunTypeStatusPropEnum = append(showWorkflowRunTypeStatusPropEnum, v)
	}
}

const (

	// ShowWorkflowRunStatusSuccess captures enum value "success"
	ShowWorkflowRunStatusSuccess string = "success"

	// ShowWorkflowRunStatusFailure captures enum value "failure"
	ShowWorkflowRunStatusFailure string = "failure"

	// ShowWorkflowRunStatusInProgress captures enum value "in-progress"
	ShowWorkflowRunStatusInProgress string = "in-progress"

	// ShowWorkflowRunStatusPending captures enum value "pending"
	ShowWorkflowRunStatusPending string = "pending"
)

// prop value enum
func (m *ShowWorkflowRun) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, showWorkflowRunTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ShowWorkflowRun) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ShowWorkflowRun) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ShowWorkflowRun) UnmarshalBinary(b []byte) error {
	var res ShowWorkflowRun
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
